name: CI / CD – deploy-tool static-site pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      env:
        description: "Deployment environment (dev / staging / prod / rollback)"
        required: false
        default: "prod"

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-south-1
  DEPLOY_ENV: ${{ github.event.inputs.env }}

jobs:
  build-deploy-monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      # 1. Checkout
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # 2. Setup Python & install CLI
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          pip install -e .

      # 3. Setup SSH key for EC2 access
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/livanshu-kp.pem
          chmod 600 ~/.ssh/livanshu-kp.pem
          mkdir -p deploy_tool
          cp ~/.ssh/livanshu-kp.pem deploy_tool/livanshu-kp.pem
          chmod 600 deploy_tool/livanshu-kp.pem

      # 4. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ env.AWS_REGION }}

      # 5. Initialize CLI
      - name: deploy-tool init
        run: |
          deploy-tool init https://github.com/pandeyshivam-debug/recipe-finder-react

      # 6. Deploy to S3
      - name: deploy-tool deploy
        run: |
          ENV="${{ github.event.inputs.env || 'prod' }}"
          echo "▶ Deploying to environment: $ENV"
          deploy-tool deploy "$ENV"

      # 7. Conditional rollback
      - name: deploy-tool rollback
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.env == 'rollback' }}
        run: |
          deploy-tool rollback

      # 8. Provision monitoring stack on EC2
      - name: Provision monitoring stack
        id: monitor
        run: |
          OUTPUT="$(deploy-tool monitor init)"
          echo "$OUTPUT"
          echo "::set-output name=grafana::$(echo \"$OUTPUT\" | grep -Eo 'http://[^ ]+:3000')"
          echo "::set-output name=prometheus::$(echo \"$OUTPUT\" | grep -Eo 'http://[^ ]+:9090')"

      # 9. Output monitoring endpoints
      - name: Show monitoring endpoints
        run: |
          echo "Grafana URL: ${{ steps.monitor.outputs.grafana }}"
          echo "Prometheus URL: ${{ steps.monitor.outputs.prometheus }}"
